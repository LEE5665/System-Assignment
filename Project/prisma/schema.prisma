// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  Number         String    @id
  name           String    
  birthDate      DateTime  
  phoneNumber    String?   
  email          String    @unique
  password       String    
  createdAt      DateTime  @default(now())

  // Relations
  taughtCourses  Course[]       @relation("InstructorCourses")
  attendances    Attendance[]
  sections       Section[]      @relation("UserSections")
}

model Section {
  id           String   @id @default(cuid())
  grade        String   // 학년
  class        String   // 반
  minhour        Int   // 몇교시부터
  maxhour        Int   // 몇교시까지
  courseId     String
  instructorId String?

  // Relations
  course       Course   @relation(fields: [courseId], references: [id])
  instructor   User?    @relation("UserSections", fields: [instructorId], references: [Number])
  attendances  Attendance[]
}

model Course {
  id           String   @id @default(cuid())
  courseCode   String   @unique
  courseName   String
  createdAt    DateTime @default(now())
  sections     Section[]
  instructorId String

  // Relations
  instructor   User?    @relation("InstructorCourses", fields: [instructorId], references: [Number])
}

model Attendance {
  id         String   @id @default(cuid())
  userId     String
  sectionId  String
  date       DateTime
  week       Int
  period     Int
  status     String

  // Relations
  user       User     @relation(fields: [userId], references: [Number])
  section    Section  @relation(fields: [sectionId], references: [id])

  @@unique([userId, sectionId, date, week, period])
}
